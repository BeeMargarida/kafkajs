{
    "version": 3,
    "terraform_version": "0.11.11",
    "serial": 22,
    "lineage": "ae7ffd5d-1647-84e4-5d5f-9699cda9e771",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {
                "droplet_ip": {
                    "sensitive": false,
                    "type": "string",
                    "value": "134.209.86.142"
                },
                "floating_ip": {
                    "sensitive": false,
                    "type": "string",
                    "value": "178.128.139.216"
                }
            },
            "resources": {
                "data.template_file.user-data": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "3d31203b3b4634d2e9ec958f486aeb3b411ae3b901e4a79b067e10afcb384fd3",
                        "attributes": {
                            "id": "3d31203b3b4634d2e9ec958f486aeb3b411ae3b901e4a79b067e10afcb384fd3",
                            "rendered": "{\"ignition\":{\"config\":{},\"security\":{\"tls\":{}},\"timeouts\":{},\"version\":\"2.2.0\"},\"networkd\":{},\"passwd\":{},\"storage\":{\"files\":[{\"filesystem\":\"root\",\"path\":\"/etc/sysctl.d/80-swappiness.conf\",\"contents\":{\"source\":\"data:,vm.swappiness%3D10\",\"verification\":{}},\"mode\":420},{\"filesystem\":\"root\",\"path\":\"/etc/systemd/resolved.conf\",\"contents\":{\"source\":\"data:,%5BResolve%5D%0ADNS%3D8.8.8.8%0AFallbackDNS%3D8.8.4.4%0A\",\"verification\":{}},\"mode\":420},{\"filesystem\":\"root\",\"path\":\"/etc/resolv.conf\",\"contents\":{\"source\":\"data:,nameserver%208.8.8.8%0A\",\"verification\":{}},\"mode\":420},{\"filesystem\":\"root\",\"path\":\"/etc/coreos/update.conf\",\"contents\":{\"source\":\"data:,%0AREBOOT_STRATEGY%3D%22off%22\",\"verification\":{}},\"mode\":420}]},\"systemd\":{\"units\":[{\"enable\":true,\"name\":\"systemd-resolved.service\"},{\"contents\":\"[Unit]\\nDescription=Turn on swap\\nRequires=create-swapfile.service\\nAfter=create-swapfile.service\\n\\n[Swap]\\nWhat=/var/vm/swapfile1\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\"name\":\"var-vm-swapfile1.swap\"},{\"contents\":\"[Unit]\\nDescription=Create a swapfile\\nRequiresMountsFor=/var\\nConditionPathExists=!/var/vm/swapfile1\\n\\n[Service]\\nType=oneshot\\nExecStart=/usr/bin/mkdir -p /var/vm\\nExecStart=/usr/bin/fallocate -l 4096m /var/vm/swapfile1\\nExecStart=/usr/bin/chmod 600 /var/vm/swapfile1\\nExecStart=/usr/sbin/mkswap /var/vm/swapfile1\\nRemainAfterExit=true\\n\",\"name\":\"create-swapfile.service\"},{\"contents\":\"[Unit]\\nDescription=docker network\\nAfter=docker.service\\nRequires=docker.service\\n\\n[Service]\\nType=oneshot\\nRemainAfterExit=true\\n\\nExecStart=/usr/bin/docker network create --driver=bridge kafkajs-demo\\nExecStop=/usr/bin/docker network rm kafkajs-demo\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\"enable\":true,\"name\":\"kafkajs-demo-network.service\"},{\"contents\":\"[Unit]\\nDescription=kafka\\nAfter=docker.service\\nAfter=kafkajs-demo-network.service\\nAfter=zookeeper.service\\nRequires=docker.service\\nRequires=zookeeper.service\\nRequires=kafkajs-demo-network.service\\n\\n[Service]\\nKillMode=none\\nUser=core\\nRestart=always\\nRestartSec=5min\\nTimeoutSec=5min\\n\\nExecStartPre=-/usr/bin/docker kill kafka\\nExecStartPre=-/usr/bin/docker rm kafka\\nExecStartPre=/usr/bin/docker pull wurstmeister/kafka:2.11-0.11.0.3\\nExecStart=/usr/bin/docker run \\\\\\n  --rm \\\\\\n  --name kafka \\\\\\n  --network=kafkajs-demo \\\\\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\\\\n  -v /home/core/server-jaas.conf:/opt/kafka/config/server-jaas.conf \\\\\\n  --env KAFKA_BROKER_ID=1 \\\\\\n  --env KAFKA_ADVERTISED_HOST_NAME=kafka \\\\\\n  --env KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181 \\\\\\n  --env KAFKA_AUTO_CREATE_TOPICS_ENABLE='true' \\\\\\n  --env KAFKA_DELETE_TOPIC_ENABLE='true' \\\\\\n  --env KAFKA_LISTENERS='PLAINTEXT://:9092' \\\\\\n  --env KAFKA_ADVERTISED_LISTENERS='PLAINTEXT://kafka:9092' \\\\\\n  --env KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT \\\\\\n  --env KAFKA_OPTS=\\\"-Djava.security.auth.login.config=/opt/kafka/config/server-jaas.conf\\\" \\\\\\n  --env KAFKA_CREATE_TOPICS=\\\"topic-test:6:1\\\" \\\\\\n  wurstmeister/kafka:2.11-0.11.0.3\\nExecStop=/usr/bin/docker stop kafka\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\"enable\":true,\"name\":\"kafka.service\"},{\"contents\":\"[Unit]\\nDescription=zookeeper\\nAfter=docker.service\\nAfter=kafkajs-demo-network.service\\nRequires=docker.service\\nRequires=kafkajs-demo-network.service\\n\\n[Service]\\nUser=core\\nTimeoutStartSec=0\\n\\nExecStartPre=-/usr/bin/mkdir -p /var/zookeeper\\nExecStartPre=-/usr/bin/docker kill zookeeper\\nExecStartPre=-/usr/bin/docker rm zookeeper\\nExecStartPre=/usr/bin/docker pull wurstmeister/zookeeper:latest\\nExecStart=/usr/bin/docker run \\\\\\n  --rm \\\\\\n  --name zookeeper \\\\\\n  --network=kafkajs-demo \\\\\\n  --env JMX_OPTS='-Djava.security.auth.login.config=/etc/kafka/server-jaas.conf' \\\\\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\\\\n  -v /home/core/server-jaas.conf:/opt/kafka/config/server-jaas.conf \\\\\\n  wurstmeister/zookeeper:latest\\nExecStop=/usr/bin/docker stop zookeeper\\n\\n[Install]\\nWantedBy=multi-user.\\n\",\"enable\":true,\"name\":\"zookeeper.service\"},{\"contents\":\"[Unit]\\nDescription=websockify\\nAfter=docker.service\\nAfter=kafkajs-demo-network.service\\nRequires=docker.service        \\nRequires=kafkajs-demo-network.service\\nRequires=kafka.service\\n\\n[Service]\\nKillMode=none\\nUser=core\\nRestart=always\\nRestartSec=5min\\nTimeoutSec=5min\\n\\nExecStartPre=-/usr/bin/docker kill websockify\\nExecStartPre=-/usr/bin/docker rm websockify\\nExecStartPre=/usr/bin/docker pull nevon/websockify:0163e4060bf88af5bd5d8e3bfae21a43a04df7ab\\nExecStart=/usr/bin/docker run \\\\\\n  --rm \\\\\\n  --publish 9090:80 \\\\\\n  --publish 9091:443 \\\\\\n  --name websockify \\\\\\n  --network=kafkajs-demo \\\\\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\\\\n  -v /home/core/tokens.conf:/opt/websockify/config/tokens.conf \\\\\\n  nevon/websockify:0163e4060bf88af5bd5d8e3bfae21a43a04df7ab \\\\\\n  --token-plugin=ReadOnlyTokenFile \\\\\\n  --token-source=/opt/websockify/config/tokens.conf \\\\\\n  80\\nExecStop=/usr/bin/docker stop websockify\\n\\n[Install]\\nWantedBy=multi-user.target\",\"enable\":true,\"name\":\"websockify.service\"}]}}",
                            "template": "{\"ignition\":{\"config\":{},\"security\":{\"tls\":{}},\"timeouts\":{},\"version\":\"2.2.0\"},\"networkd\":{},\"passwd\":{},\"storage\":{\"files\":[{\"filesystem\":\"root\",\"path\":\"/etc/sysctl.d/80-swappiness.conf\",\"contents\":{\"source\":\"data:,vm.swappiness%3D10\",\"verification\":{}},\"mode\":420},{\"filesystem\":\"root\",\"path\":\"/etc/systemd/resolved.conf\",\"contents\":{\"source\":\"data:,%5BResolve%5D%0ADNS%3D8.8.8.8%0AFallbackDNS%3D8.8.4.4%0A\",\"verification\":{}},\"mode\":420},{\"filesystem\":\"root\",\"path\":\"/etc/resolv.conf\",\"contents\":{\"source\":\"data:,nameserver%208.8.8.8%0A\",\"verification\":{}},\"mode\":420},{\"filesystem\":\"root\",\"path\":\"/etc/coreos/update.conf\",\"contents\":{\"source\":\"data:,%0AREBOOT_STRATEGY%3D%22off%22\",\"verification\":{}},\"mode\":420}]},\"systemd\":{\"units\":[{\"enable\":true,\"name\":\"systemd-resolved.service\"},{\"contents\":\"[Unit]\\nDescription=Turn on swap\\nRequires=create-swapfile.service\\nAfter=create-swapfile.service\\n\\n[Swap]\\nWhat=/var/vm/swapfile1\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\"name\":\"var-vm-swapfile1.swap\"},{\"contents\":\"[Unit]\\nDescription=Create a swapfile\\nRequiresMountsFor=/var\\nConditionPathExists=!/var/vm/swapfile1\\n\\n[Service]\\nType=oneshot\\nExecStart=/usr/bin/mkdir -p /var/vm\\nExecStart=/usr/bin/fallocate -l 4096m /var/vm/swapfile1\\nExecStart=/usr/bin/chmod 600 /var/vm/swapfile1\\nExecStart=/usr/sbin/mkswap /var/vm/swapfile1\\nRemainAfterExit=true\\n\",\"name\":\"create-swapfile.service\"},{\"contents\":\"[Unit]\\nDescription=docker network\\nAfter=docker.service\\nRequires=docker.service\\n\\n[Service]\\nType=oneshot\\nRemainAfterExit=true\\n\\nExecStart=/usr/bin/docker network create --driver=bridge kafkajs-demo\\nExecStop=/usr/bin/docker network rm kafkajs-demo\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\"enable\":true,\"name\":\"kafkajs-demo-network.service\"},{\"contents\":\"[Unit]\\nDescription=kafka\\nAfter=docker.service\\nAfter=kafkajs-demo-network.service\\nAfter=zookeeper.service\\nRequires=docker.service\\nRequires=zookeeper.service\\nRequires=kafkajs-demo-network.service\\n\\n[Service]\\nKillMode=none\\nUser=core\\nRestart=always\\nRestartSec=5min\\nTimeoutSec=5min\\n\\nExecStartPre=-/usr/bin/docker kill kafka\\nExecStartPre=-/usr/bin/docker rm kafka\\nExecStartPre=/usr/bin/docker pull wurstmeister/kafka:2.11-0.11.0.3\\nExecStart=/usr/bin/docker run \\\\\\n  --rm \\\\\\n  --name kafka \\\\\\n  --network=kafkajs-demo \\\\\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\\\\n  -v /home/core/server-jaas.conf:/opt/kafka/config/server-jaas.conf \\\\\\n  --env KAFKA_BROKER_ID=1 \\\\\\n  --env KAFKA_ADVERTISED_HOST_NAME=kafka \\\\\\n  --env KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181 \\\\\\n  --env KAFKA_AUTO_CREATE_TOPICS_ENABLE='true' \\\\\\n  --env KAFKA_DELETE_TOPIC_ENABLE='true' \\\\\\n  --env KAFKA_LISTENERS='PLAINTEXT://:9092' \\\\\\n  --env KAFKA_ADVERTISED_LISTENERS='PLAINTEXT://kafka:9092' \\\\\\n  --env KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT \\\\\\n  --env KAFKA_OPTS=\\\"-Djava.security.auth.login.config=/opt/kafka/config/server-jaas.conf\\\" \\\\\\n  --env KAFKA_CREATE_TOPICS=\\\"topic-test:6:1\\\" \\\\\\n  wurstmeister/kafka:2.11-0.11.0.3\\nExecStop=/usr/bin/docker stop kafka\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\"enable\":true,\"name\":\"kafka.service\"},{\"contents\":\"[Unit]\\nDescription=zookeeper\\nAfter=docker.service\\nAfter=kafkajs-demo-network.service\\nRequires=docker.service\\nRequires=kafkajs-demo-network.service\\n\\n[Service]\\nUser=core\\nTimeoutStartSec=0\\n\\nExecStartPre=-/usr/bin/mkdir -p /var/zookeeper\\nExecStartPre=-/usr/bin/docker kill zookeeper\\nExecStartPre=-/usr/bin/docker rm zookeeper\\nExecStartPre=/usr/bin/docker pull wurstmeister/zookeeper:latest\\nExecStart=/usr/bin/docker run \\\\\\n  --rm \\\\\\n  --name zookeeper \\\\\\n  --network=kafkajs-demo \\\\\\n  --env JMX_OPTS='-Djava.security.auth.login.config=/etc/kafka/server-jaas.conf' \\\\\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\\\\n  -v /home/core/server-jaas.conf:/opt/kafka/config/server-jaas.conf \\\\\\n  wurstmeister/zookeeper:latest\\nExecStop=/usr/bin/docker stop zookeeper\\n\\n[Install]\\nWantedBy=multi-user.\\n\",\"enable\":true,\"name\":\"zookeeper.service\"},{\"contents\":\"[Unit]\\nDescription=websockify\\nAfter=docker.service\\nAfter=kafkajs-demo-network.service\\nRequires=docker.service        \\nRequires=kafkajs-demo-network.service\\nRequires=kafka.service\\n\\n[Service]\\nKillMode=none\\nUser=core\\nRestart=always\\nRestartSec=5min\\nTimeoutSec=5min\\n\\nExecStartPre=-/usr/bin/docker kill websockify\\nExecStartPre=-/usr/bin/docker rm websockify\\nExecStartPre=/usr/bin/docker pull nevon/websockify:0163e4060bf88af5bd5d8e3bfae21a43a04df7ab\\nExecStart=/usr/bin/docker run \\\\\\n  --rm \\\\\\n  --publish 9090:80 \\\\\\n  --publish 9091:443 \\\\\\n  --name websockify \\\\\\n  --network=kafkajs-demo \\\\\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\\\\n  -v /home/core/tokens.conf:/opt/websockify/config/tokens.conf \\\\\\n  nevon/websockify:0163e4060bf88af5bd5d8e3bfae21a43a04df7ab \\\\\\n  --token-plugin=ReadOnlyTokenFile \\\\\\n  --token-source=/opt/websockify/config/tokens.conf \\\\\\n  80\\nExecStop=/usr/bin/docker stop websockify\\n\\n[Install]\\nWantedBy=multi-user.target\",\"enable\":true,\"name\":\"websockify.service\"}]}}"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "digitalocean_droplet.kafkajs-demo": {
                    "type": "digitalocean_droplet",
                    "depends_on": [
                        "data.template_file.user-data"
                    ],
                    "primary": {
                        "id": "135348982",
                        "attributes": {
                            "backups": "false",
                            "disk": "80",
                            "id": "135348982",
                            "image": "coreos-stable",
                            "ipv4_address": "134.209.86.142",
                            "ipv4_address_private": "10.133.98.33",
                            "ipv6": "true",
                            "ipv6_address": "2a03:b0c0:2:f0::d1:a001",
                            "ipv6_address_private": "",
                            "locked": "false",
                            "memory": "4096",
                            "monitoring": "false",
                            "name": "kafkajs-demo",
                            "price_hourly": "0.02976",
                            "price_monthly": "20",
                            "private_networking": "true",
                            "region": "ams3",
                            "resize_disk": "true",
                            "size": "s-2vcpu-4gb",
                            "ssh_keys.#": "1",
                            "ssh_keys.1662351538": "5675195",
                            "status": "active",
                            "tags.#": "0",
                            "user_data": "34393af2cc8b5a5d5319c72124c47b357116564e",
                            "vcpus": "2",
                            "volume_ids.#": "0"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.digitalocean"
                },
                "digitalocean_floating_ip.kafkajs-demo": {
                    "type": "digitalocean_floating_ip",
                    "depends_on": [
                        "digitalocean_droplet.kafkajs-demo"
                    ],
                    "primary": {
                        "id": "178.128.139.216",
                        "attributes": {
                            "droplet_id": "135348982",
                            "id": "178.128.139.216",
                            "ip_address": "178.128.139.216",
                            "region": "ams3"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.digitalocean"
                }
            },
            "depends_on": []
        }
    ]
}
